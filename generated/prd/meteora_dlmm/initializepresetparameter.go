// Code generated by https://github.com/zheng-lan/anchor-go. DO NOT EDIT.

package meteora_dlmm

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// InitializePresetParameter is the `initialize_preset_parameter` instruction.
type InitializePresetParameter struct {
	Ix *InitPresetParametersIx

	// [0] = [WRITE] preset_parameter
	//
	// [1] = [WRITE, SIGNER] admin
	//
	// [2] = [] system_program
	//
	// [3] = [] rent
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitializePresetParameterInstructionBuilder creates a new `InitializePresetParameter` instruction builder.
func NewInitializePresetParameterInstructionBuilder() *InitializePresetParameter {
	nd := &InitializePresetParameter{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 4),
	}
	return nd
}

// SetIx sets the "ix" parameter.
func (inst *InitializePresetParameter) SetIx(ix InitPresetParametersIx) *InitializePresetParameter {
	inst.Ix = &ix
	return inst
}

// SetPresetParameterAccount sets the "preset_parameter" account.
func (inst *InitializePresetParameter) SetPresetParameterAccount(presetParameter ag_solanago.PublicKey) *InitializePresetParameter {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(presetParameter).WRITE()
	return inst
}

// GetPresetParameterAccount gets the "preset_parameter" account.
func (inst *InitializePresetParameter) GetPresetParameterAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetAdminAccount sets the "admin" account.
func (inst *InitializePresetParameter) SetAdminAccount(admin ag_solanago.PublicKey) *InitializePresetParameter {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(admin).WRITE().SIGNER()
	return inst
}

// GetAdminAccount gets the "admin" account.
func (inst *InitializePresetParameter) GetAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetSystemProgramAccount sets the "system_program" account.
func (inst *InitializePresetParameter) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *InitializePresetParameter {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "system_program" account.
func (inst *InitializePresetParameter) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetRentAccount sets the "rent" account.
func (inst *InitializePresetParameter) SetRentAccount(rent ag_solanago.PublicKey) *InitializePresetParameter {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(rent)
	return inst
}

// GetRentAccount gets the "rent" account.
func (inst *InitializePresetParameter) GetRentAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

func (inst *InitializePresetParameter) SetAccounts(accounts []*ag_solanago.AccountMeta) error {
	inst.AccountMetaSlice = accounts
	return inst.Validate()
}

func (inst *InitializePresetParameter) SetRemainingAccounts(metas []*ag_solanago.AccountMeta) *InitializePresetParameter {
	inst.AccountMetaSlice = append(inst.AccountMetaSlice[0:4], metas...)
	return inst
}

func (inst *InitializePresetParameter) GetRemainingAccounts() []*ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[4:]
}

func (inst InitializePresetParameter) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_InitializePresetParameter,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst InitializePresetParameter) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *InitializePresetParameter) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Ix == nil {
			return errors.New("ix parameter is not set")
		}
	}

	if len(inst.AccountMetaSlice) < 4 {
		return errors.New("accounts slice has wrong length: expected 4 accounts")
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.PresetParameter is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Admin is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.Rent is not set")
		}
	}
	return nil
}

func (inst *InitializePresetParameter) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("InitializePresetParameter")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Ix", *inst.Ix))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=4]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("preset_parameter", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("           admin", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("  system_program", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("            rent", inst.AccountMetaSlice.Get(3)))
					})
				})
		})
}

func (obj InitializePresetParameter) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Ix` param:
	err = encoder.Encode(obj.Ix)
	if err != nil {
		return err
	}
	return nil
}
func (obj *InitializePresetParameter) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Ix`:
	err = decoder.Decode(&obj.Ix)
	if err != nil {
		return err
	}
	return nil
}

// NewInitializePresetParameterInstruction declares a new InitializePresetParameter instruction with the provided parameters and accounts.
func NewInitializePresetParameterInstruction(
	// Parameters:
	ix InitPresetParametersIx,
	// Accounts:
	presetParameter ag_solanago.PublicKey,
	admin ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey,
	rent ag_solanago.PublicKey) *InitializePresetParameter {
	return NewInitializePresetParameterInstructionBuilder().
		SetIx(ix).
		SetPresetParameterAccount(presetParameter).
		SetAdminAccount(admin).
		SetSystemProgramAccount(systemProgram).
		SetRentAccount(rent)
}

// NewSimpleInitializePresetParameterInstruction declares a new InitializePresetParameter instruction with the provided parameters and accounts.
func NewSimpleInitializePresetParameterInstruction(
	// Parameters:
	ix InitPresetParametersIx,
	// Accounts:
	presetParameter ag_solanago.PublicKey,
	admin ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey,
	rent ag_solanago.PublicKey) *InitializePresetParameter {
	return NewInitializePresetParameterInstructionBuilder().
		SetIx(ix).
		SetPresetParameterAccount(presetParameter).
		SetAdminAccount(admin).
		SetSystemProgramAccount(systemProgram).
		SetRentAccount(rent)
}
