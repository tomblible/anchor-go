// Code generated by https://github.com/zheng-lan/anchor-go. DO NOT EDIT.

package heaven

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// ClaimStandardProtocolTradingFees is the `claim_standard_protocol_trading_fees` instruction.
type ClaimStandardProtocolTradingFees struct {
	Amount *uint64

	// ····· swap: [0] = [] token_a_program
	//
	// ··········· [1] = [] token_b_program
	//
	// ··········· [2] = [] associated_token_program
	//
	// ··········· [3] = [] system_program
	//
	// ··········· [4] = [WRITE] liquidity_pool_state
	//
	// ··········· [5] = [WRITE, SIGNER] user
	// ················· CHECK
	//
	// ··········· [6] = [] token_a_mint
	// ················· CHECK
	//
	// ··········· [7] = [] token_b_mint
	// ················· CHECK
	//
	// ··········· [8] = [WRITE] user_token_a_vault
	//
	// ··········· [9] = [WRITE] user_token_b_vault
	//
	// ··········· [10] = [WRITE] token_a_vault
	//
	// ··········· [11] = [WRITE] token_b_vault
	//
	// ··········· [12] = [WRITE] protocol_config
	//
	// ··········· [13] = [] instruction_sysvar_account_info
	// ················· CHECK
	//
	// [14] = [SIGNER] protocol_admin
	//
	// [15] = [] protocol_admin_state
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewClaimStandardProtocolTradingFeesInstructionBuilder creates a new `ClaimStandardProtocolTradingFees` instruction builder.
func NewClaimStandardProtocolTradingFeesInstructionBuilder() *ClaimStandardProtocolTradingFees {
	nd := &ClaimStandardProtocolTradingFees{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 17),
	}
	nd.AccountMetaSlice[2] = ag_solanago.Meta(AssociatedTokenProgram)
	nd.AccountMetaSlice[3] = ag_solanago.Meta(SystemProgram)
	nd.AccountMetaSlice[13] = ag_solanago.Meta(InstructionsProgram)
	nd.AccountMetaSlice[15] = ag_solanago.Meta(ProtocolAdminStatePDA)
	return nd
}

// SetAmount sets the "amount" parameter.
func (inst *ClaimStandardProtocolTradingFees) SetAmount(amount uint64) *ClaimStandardProtocolTradingFees {
	inst.Amount = &amount
	return inst
}

type ClaimStandardProtocolTradingFeesSwapAccountsBuilder struct {
	ag_solanago.AccountMetaSlice `bin:"-"`
}

func NewClaimStandardProtocolTradingFeesSwapAccountsBuilder() *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	return &ClaimStandardProtocolTradingFeesSwapAccountsBuilder{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 14),
	}
}

func (inst *ClaimStandardProtocolTradingFees) SetSwapAccountsFromBuilder(claimStandardProtocolTradingFeesSwapAccountsBuilder *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) *ClaimStandardProtocolTradingFees {
	inst.AccountMetaSlice[0] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetTokenAProgramAccount()
	inst.AccountMetaSlice[1] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetTokenBProgramAccount()
	inst.AccountMetaSlice[2] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetAssociatedTokenProgramAccount()
	inst.AccountMetaSlice[3] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetSystemProgramAccount()
	inst.AccountMetaSlice[4] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetLiquidityPoolStateAccount()
	inst.AccountMetaSlice[5] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetUserAccount()
	inst.AccountMetaSlice[6] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetTokenAMintAccount()
	inst.AccountMetaSlice[7] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetTokenBMintAccount()
	inst.AccountMetaSlice[8] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetUserTokenAVaultAccount()
	inst.AccountMetaSlice[9] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetUserTokenBVaultAccount()
	inst.AccountMetaSlice[10] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetTokenAVaultAccount()
	inst.AccountMetaSlice[11] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetTokenBVaultAccount()
	inst.AccountMetaSlice[12] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetProtocolConfigAccount()
	inst.AccountMetaSlice[13] = claimStandardProtocolTradingFeesSwapAccountsBuilder.GetInstructionSysvarAccountInfoAccount()
	return inst
}

// SetTokenAProgramAccount sets the "token_a_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetTokenAProgramAccount(tokenAProgram ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(tokenAProgram)
	return inst
}

// GetTokenAProgramAccount gets the "token_a_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetTokenAProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetTokenBProgramAccount sets the "token_b_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetTokenBProgramAccount(tokenBProgram ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(tokenBProgram)
	return inst
}

// GetTokenBProgramAccount gets the "token_b_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetTokenBProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetAssociatedTokenProgramAccount sets the "associated_token_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetAssociatedTokenProgramAccount(associatedTokenProgram ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(associatedTokenProgram)
	return inst
}

// GetAssociatedTokenProgramAccount gets the "associated_token_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetAssociatedTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetSystemProgramAccount sets the "system_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "system_program" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetLiquidityPoolStateAccount sets the "liquidity_pool_state" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetLiquidityPoolStateAccount(liquidityPoolState ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(liquidityPoolState).WRITE()
	return inst
}

// GetLiquidityPoolStateAccount gets the "liquidity_pool_state" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetLiquidityPoolStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetUserAccount sets the "user" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetUserAccount(user ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(user).WRITE().SIGNER()
	return inst
}

// GetUserAccount gets the "user" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetUserAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetTokenAMintAccount sets the "token_a_mint" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetTokenAMintAccount(tokenAMint ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(tokenAMint)
	return inst
}

// GetTokenAMintAccount gets the "token_a_mint" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetTokenAMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetTokenBMintAccount sets the "token_b_mint" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetTokenBMintAccount(tokenBMint ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(tokenBMint)
	return inst
}

// GetTokenBMintAccount gets the "token_b_mint" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetTokenBMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetUserTokenAVaultAccount sets the "user_token_a_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetUserTokenAVaultAccount(userTokenAVault ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(userTokenAVault).WRITE()
	return inst
}

// GetUserTokenAVaultAccount gets the "user_token_a_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetUserTokenAVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetUserTokenBVaultAccount sets the "user_token_b_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetUserTokenBVaultAccount(userTokenBVault ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(userTokenBVault).WRITE()
	return inst
}

// GetUserTokenBVaultAccount gets the "user_token_b_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetUserTokenBVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetTokenAVaultAccount sets the "token_a_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetTokenAVaultAccount(tokenAVault ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(tokenAVault).WRITE()
	return inst
}

// GetTokenAVaultAccount gets the "token_a_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetTokenAVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetTokenBVaultAccount sets the "token_b_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetTokenBVaultAccount(tokenBVault ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(tokenBVault).WRITE()
	return inst
}

// GetTokenBVaultAccount gets the "token_b_vault" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetTokenBVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

// SetProtocolConfigAccount sets the "protocol_config" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetProtocolConfigAccount(protocolConfig ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[12] = ag_solanago.Meta(protocolConfig).WRITE()
	return inst
}

// GetProtocolConfigAccount gets the "protocol_config" account.
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetProtocolConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(12)
}

// SetInstructionSysvarAccountInfoAccount sets the "instruction_sysvar_account_info" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) SetInstructionSysvarAccountInfoAccount(instructionSysvarAccountInfo ag_solanago.PublicKey) *ClaimStandardProtocolTradingFeesSwapAccountsBuilder {
	inst.AccountMetaSlice[13] = ag_solanago.Meta(instructionSysvarAccountInfo)
	return inst
}

// GetInstructionSysvarAccountInfoAccount gets the "instruction_sysvar_account_info" account.
// CHECK
func (inst *ClaimStandardProtocolTradingFeesSwapAccountsBuilder) GetInstructionSysvarAccountInfoAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(13)
}

// SetProtocolAdminAccount sets the "protocol_admin" account.
func (inst *ClaimStandardProtocolTradingFees) SetProtocolAdminAccount(protocolAdmin ag_solanago.PublicKey) *ClaimStandardProtocolTradingFees {
	inst.AccountMetaSlice[14] = ag_solanago.Meta(protocolAdmin).SIGNER()
	return inst
}

// GetProtocolAdminAccount gets the "protocol_admin" account.
func (inst *ClaimStandardProtocolTradingFees) GetProtocolAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(14)
}

// SetProtocolAdminStateAccount sets the "protocol_admin_state" account.
func (inst *ClaimStandardProtocolTradingFees) SetProtocolAdminStateAccount(protocolAdminState ag_solanago.PublicKey) *ClaimStandardProtocolTradingFees {
	inst.AccountMetaSlice[15] = ag_solanago.Meta(protocolAdminState)
	return inst
}

// GetProtocolAdminStateAccount gets the "protocol_admin_state" account.
func (inst *ClaimStandardProtocolTradingFees) GetProtocolAdminStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(15)
}

func (inst *ClaimStandardProtocolTradingFees) SetAccounts(accounts []*ag_solanago.AccountMeta) error {
	inst.AccountMetaSlice = accounts
	return inst.Validate()
}

func (inst *ClaimStandardProtocolTradingFees) SetRemainingAccounts(metas []*ag_solanago.AccountMeta) *ClaimStandardProtocolTradingFees {
	inst.AccountMetaSlice = append(inst.AccountMetaSlice[0:3], metas...)
	return inst
}

func (inst *ClaimStandardProtocolTradingFees) GetRemainingAccounts() []*ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[17:]
}

func (inst ClaimStandardProtocolTradingFees) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_ClaimStandardProtocolTradingFees,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst ClaimStandardProtocolTradingFees) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *ClaimStandardProtocolTradingFees) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Amount == nil {
			return errors.New("amount parameter is not set")
		}
	}

	if len(inst.AccountMetaSlice) < 17 {
		return errors.New("accounts slice has wrong length: expected 17 accounts")
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.SwapTokenAProgram is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.SwapTokenBProgram is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.AssociatedTokenProgram is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.SwapLiquidityPoolState is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.SwapUser is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.SwapTokenAMint is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.SwapTokenBMint is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.SwapUserTokenAVault is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.SwapUserTokenBVault is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.SwapTokenAVault is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.SwapTokenBVault is not set")
		}
		if inst.AccountMetaSlice[12] == nil {
			return errors.New("accounts.SwapProtocolConfig is not set")
		}
		if inst.AccountMetaSlice[13] == nil {
			return errors.New("accounts.InstructionsProgram is not set")
		}
		if inst.AccountMetaSlice[14] == nil {
			return errors.New("accounts.ProtocolAdmin is not set")
		}
		if inst.AccountMetaSlice[15] == nil {
			return errors.New("accounts.ProtocolAdminState is not set")
		}
	}
	return nil
}

func (inst *ClaimStandardProtocolTradingFees) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("ClaimStandardProtocolTradingFees")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Amount", *inst.Amount))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=17]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("                swap/token_a_program", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("                swap/token_b_program", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("       swap/associated_token_program", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("                 swap/system_program", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("           swap/liquidity_pool_state", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("                           swap/user", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("                   swap/token_a_mint", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("                   swap/token_b_mint", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("             swap/user_token_a_vault", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("             swap/user_token_b_vault", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("                  swap/token_a_vault", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta("                  swap/token_b_vault", inst.AccountMetaSlice.Get(11)))
						accountsBranch.Child(ag_format.Meta("                swap/protocol_config", inst.AccountMetaSlice.Get(12)))
						accountsBranch.Child(ag_format.Meta("swap/instruction_sysvar_account_info", inst.AccountMetaSlice.Get(13)))
						accountsBranch.Child(ag_format.Meta("                      protocol_admin", inst.AccountMetaSlice.Get(14)))
						accountsBranch.Child(ag_format.Meta("                protocol_admin_state", inst.AccountMetaSlice.Get(15)))
					})
				})
		})
}

func (obj ClaimStandardProtocolTradingFees) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Amount` param:
	err = encoder.Encode(obj.Amount)
	if err != nil {
		return err
	}
	return nil
}
func (obj *ClaimStandardProtocolTradingFees) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Amount`:
	err = decoder.Decode(&obj.Amount)
	if err != nil {
		return err
	}
	return nil
}

// NewClaimStandardProtocolTradingFeesInstruction declares a new ClaimStandardProtocolTradingFees instruction with the provided parameters and accounts.
func NewClaimStandardProtocolTradingFeesInstruction(
	// Parameters:
	amount uint64,
	// Accounts:
	swapTokenAProgram ag_solanago.PublicKey,
	swapTokenBProgram ag_solanago.PublicKey,
	swapLiquidityPoolState ag_solanago.PublicKey,
	swapUser ag_solanago.PublicKey,
	swapTokenAMint ag_solanago.PublicKey,
	swapTokenBMint ag_solanago.PublicKey,
	swapUserTokenAVault ag_solanago.PublicKey,
	swapUserTokenBVault ag_solanago.PublicKey,
	swapTokenAVault ag_solanago.PublicKey,
	swapTokenBVault ag_solanago.PublicKey,
	swapProtocolConfig ag_solanago.PublicKey,
	protocolAdmin ag_solanago.PublicKey) *ClaimStandardProtocolTradingFees {
	return NewClaimStandardProtocolTradingFeesInstructionBuilder().
		SetAmount(amount).
		SetSwapAccountsFromBuilder(
			NewClaimStandardProtocolTradingFeesSwapAccountsBuilder().
				SetTokenAProgramAccount(swapTokenAProgram).
				SetTokenBProgramAccount(swapTokenBProgram).
				SetAssociatedTokenProgramAccount(AssociatedTokenProgram).
				SetSystemProgramAccount(SystemProgram).
				SetLiquidityPoolStateAccount(swapLiquidityPoolState).
				SetUserAccount(swapUser).
				SetTokenAMintAccount(swapTokenAMint).
				SetTokenBMintAccount(swapTokenBMint).
				SetUserTokenAVaultAccount(swapUserTokenAVault).
				SetUserTokenBVaultAccount(swapUserTokenBVault).
				SetTokenAVaultAccount(swapTokenAVault).
				SetTokenBVaultAccount(swapTokenBVault).
				SetProtocolConfigAccount(swapProtocolConfig).
				SetInstructionSysvarAccountInfoAccount(InstructionsProgram),
		).
		SetProtocolAdminAccount(protocolAdmin)
}

// NewSimpleClaimStandardProtocolTradingFeesInstruction declares a new ClaimStandardProtocolTradingFees instruction with the provided parameters and accounts.
func NewSimpleClaimStandardProtocolTradingFeesInstruction(
	// Parameters:
	amount uint64,
	// Accounts:
	swapTokenAProgram ag_solanago.PublicKey,
	swapTokenBProgram ag_solanago.PublicKey,
	swapLiquidityPoolState ag_solanago.PublicKey,
	swapUser ag_solanago.PublicKey,
	swapTokenAMint ag_solanago.PublicKey,
	swapTokenBMint ag_solanago.PublicKey,
	swapUserTokenAVault ag_solanago.PublicKey,
	swapUserTokenBVault ag_solanago.PublicKey,
	swapTokenAVault ag_solanago.PublicKey,
	swapTokenBVault ag_solanago.PublicKey,
	swapProtocolConfig ag_solanago.PublicKey,
	protocolAdmin ag_solanago.PublicKey) *ClaimStandardProtocolTradingFees {
	return NewClaimStandardProtocolTradingFeesInstructionBuilder().
		SetAmount(amount).
		SetSwapAccountsFromBuilder(
			NewClaimStandardProtocolTradingFeesSwapAccountsBuilder().
				SetTokenAProgramAccount(swapTokenAProgram).
				SetTokenBProgramAccount(swapTokenBProgram).
				SetAssociatedTokenProgramAccount(AssociatedTokenProgram).
				SetSystemProgramAccount(SystemProgram).
				SetLiquidityPoolStateAccount(swapLiquidityPoolState).
				SetUserAccount(swapUser).
				SetTokenAMintAccount(swapTokenAMint).
				SetTokenBMintAccount(swapTokenBMint).
				SetUserTokenAVaultAccount(swapUserTokenAVault).
				SetUserTokenBVaultAccount(swapUserTokenBVault).
				SetTokenAVaultAccount(swapTokenAVault).
				SetTokenBVaultAccount(swapTokenBVault).
				SetProtocolConfigAccount(swapProtocolConfig).
				SetInstructionSysvarAccountInfoAccount(InstructionsProgram),
		).
		SetProtocolAdminAccount(protocolAdmin)
}
