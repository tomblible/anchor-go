// Code generated by https://github.com/zheng-lan/anchor-go. DO NOT EDIT.

package token2022

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// InitializeGroupMemberPointer is the `initialize_group_member_pointer` instruction.
type InitializeGroupMemberPointer struct {
	Authority     *ag_solanago.PublicKey `bin:"optional"`
	MemberAddress *ag_solanago.PublicKey `bin:"optional"`

	// [0] = [WRITE] mint
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitializeGroupMemberPointerInstructionBuilder creates a new `InitializeGroupMemberPointer` instruction builder.
func NewInitializeGroupMemberPointerInstructionBuilder() *InitializeGroupMemberPointer {
	nd := &InitializeGroupMemberPointer{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 1),
	}
	return nd
}

// SetAuthority sets the "authority" parameter.
func (inst *InitializeGroupMemberPointer) SetAuthority(authority ag_solanago.PublicKey) *InitializeGroupMemberPointer {
	inst.Authority = &authority
	return inst
}

// SetMemberAddress sets the "memberAddress" parameter.
func (inst *InitializeGroupMemberPointer) SetMemberAddress(memberAddress ag_solanago.PublicKey) *InitializeGroupMemberPointer {
	inst.MemberAddress = &memberAddress
	return inst
}

// SetMintAccount sets the "mint" account.
func (inst *InitializeGroupMemberPointer) SetMintAccount(mint ag_solanago.PublicKey) *InitializeGroupMemberPointer {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(mint).WRITE()
	return inst
}

// GetMintAccount gets the "mint" account.
func (inst *InitializeGroupMemberPointer) GetMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

func (inst *InitializeGroupMemberPointer) SetAccounts(accounts []*ag_solanago.AccountMeta) error {
	inst.AccountMetaSlice = accounts
	return inst.Validate()
}

func (inst *InitializeGroupMemberPointer) SetRemainingAccounts(metas []*ag_solanago.AccountMeta) *InitializeGroupMemberPointer {
	inst.AccountMetaSlice = append(inst.AccountMetaSlice[0:1], metas...)
	return inst
}

func (inst *InitializeGroupMemberPointer) GetRemainingAccounts() []*ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[1:]
}

func (inst InitializeGroupMemberPointer) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: ag_binary.TypeIDFromUint8(Instruction_InitializeGroupMemberPointer),
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst InitializeGroupMemberPointer) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *InitializeGroupMemberPointer) Validate() error {
	// Check whether all (required) parameters are set:
	{
	}

	if len(inst.AccountMetaSlice) < 1 {
		return errors.New("accounts slice has wrong length: expected 1 accounts")
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Mint is not set")
		}
	}
	return nil
}

func (inst *InitializeGroupMemberPointer) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("InitializeGroupMemberPointer")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=2]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("    Authority (OPT)", inst.Authority))
						paramsBranch.Child(ag_format.Param("MemberAddress (OPT)", inst.MemberAddress))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=1]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("mint", inst.AccountMetaSlice.Get(0)))
					})
				})
		})
}

func (obj InitializeGroupMemberPointer) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Authority` param (optional):
	{
		if obj.Authority == nil {
			err = encoder.WriteBool(false)
			if err != nil {
				return err
			}
		} else {
			err = encoder.WriteBool(true)
			if err != nil {
				return err
			}
			err = encoder.Encode(obj.Authority)
			if err != nil {
				return err
			}
		}
	}
	// Serialize `MemberAddress` param (optional):
	{
		if obj.MemberAddress == nil {
			err = encoder.WriteBool(false)
			if err != nil {
				return err
			}
		} else {
			err = encoder.WriteBool(true)
			if err != nil {
				return err
			}
			err = encoder.Encode(obj.MemberAddress)
			if err != nil {
				return err
			}
		}
	}
	return nil
}
func (obj *InitializeGroupMemberPointer) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Authority` (optional):
	{
		ok, err := decoder.ReadBool()
		if err != nil {
			return err
		}
		if ok {
			err = decoder.Decode(&obj.Authority)
			if err != nil {
				return err
			}
		}
	}
	// Deserialize `MemberAddress` (optional):
	{
		ok, err := decoder.ReadBool()
		if err != nil {
			return err
		}
		if ok {
			err = decoder.Decode(&obj.MemberAddress)
			if err != nil {
				return err
			}
		}
	}
	return nil
}

// NewInitializeGroupMemberPointerInstruction declares a new InitializeGroupMemberPointer instruction with the provided parameters and accounts.
func NewInitializeGroupMemberPointerInstruction(
	// Parameters:
	authority ag_solanago.PublicKey,
	memberAddress ag_solanago.PublicKey,
	// Accounts:
	mint ag_solanago.PublicKey) *InitializeGroupMemberPointer {
	return NewInitializeGroupMemberPointerInstructionBuilder().
		SetAuthority(authority).
		SetMemberAddress(memberAddress).
		SetMintAccount(mint)
}

// NewSimpleInitializeGroupMemberPointerInstruction declares a new InitializeGroupMemberPointer instruction with the provided parameters and accounts.
func NewSimpleInitializeGroupMemberPointerInstruction(
	// Parameters:
	authority ag_solanago.PublicKey,
	memberAddress ag_solanago.PublicKey,
	// Accounts:
	mint ag_solanago.PublicKey) *InitializeGroupMemberPointer {
	return NewInitializeGroupMemberPointerInstructionBuilder().
		SetAuthority(authority).
		SetMemberAddress(memberAddress).
		SetMintAccount(mint)
}
