// Code generated by https://github.com/zheng-lan/anchor-go. DO NOT EDIT.

package token2022

import (
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Instruction prefix for instructions to the scaled ui amount extension
type ScaledUiAmountExtension struct {
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewScaledUiAmountExtensionInstructionBuilder creates a new `ScaledUiAmountExtension` instruction builder.
func NewScaledUiAmountExtensionInstructionBuilder() *ScaledUiAmountExtension {
	nd := &ScaledUiAmountExtension{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 0),
	}
	return nd
}

func (inst *ScaledUiAmountExtension) SetAccounts(accounts []*ag_solanago.AccountMeta) error {
	inst.AccountMetaSlice = accounts
	return inst.Validate()
}

func (inst *ScaledUiAmountExtension) SetRemainingAccounts(metas []*ag_solanago.AccountMeta) *ScaledUiAmountExtension {
	inst.AccountMetaSlice = append(inst.AccountMetaSlice[0:0], metas...)
	return inst
}

func (inst *ScaledUiAmountExtension) GetRemainingAccounts() []*ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[0:]
}

func (inst ScaledUiAmountExtension) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_ScaledUiAmountExtension,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst ScaledUiAmountExtension) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *ScaledUiAmountExtension) Validate() error {
	return nil
}

func (inst *ScaledUiAmountExtension) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("ScaledUiAmountExtension")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=0]").ParentFunc(func(accountsBranch ag_treeout.Branches) {})
				})
		})
}

func (obj ScaledUiAmountExtension) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *ScaledUiAmountExtension) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewScaledUiAmountExtensionInstruction declares a new ScaledUiAmountExtension instruction with the provided parameters and accounts.
func NewScaledUiAmountExtensionInstruction() *ScaledUiAmountExtension {
	return NewScaledUiAmountExtensionInstructionBuilder()
}

// NewSimpleScaledUiAmountExtensionInstruction declares a new ScaledUiAmountExtension instruction with the provided parameters and accounts.
func NewSimpleScaledUiAmountExtensionInstruction() *ScaledUiAmountExtension {
	return NewScaledUiAmountExtensionInstructionBuilder()
}
