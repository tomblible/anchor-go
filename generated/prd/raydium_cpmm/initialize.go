// Code generated by https://github.com/zheng-lan/anchor-go. DO NOT EDIT.

package raydium_cpmm

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Initialize is the `initialize` instruction.
type Initialize struct {
	InitAmount0 *uint64
	InitAmount1 *uint64
	OpenTime    *uint64

	// [0] = [WRITE, SIGNER] creator
	//
	// [1] = [] amm_config
	//
	// [2] = [] authority
	//
	// [3] = [WRITE] pool_state
	//
	// [4] = [] token0_mint
	//
	// [5] = [] token1_mint
	//
	// [6] = [WRITE] lp_mint
	//
	// [7] = [WRITE] creator_token0
	//
	// [8] = [WRITE] creator_token1
	//
	// [9] = [WRITE] creator_lp_token
	//
	// [10] = [WRITE] token0_vault
	//
	// [11] = [WRITE] token1_vault
	//
	// [12] = [WRITE] create_pool_fee
	//
	// [13] = [WRITE] observation_state
	//
	// [14] = [] token_program
	//
	// [15] = [] token0_program
	//
	// [16] = [] token1_program
	//
	// [17] = [] associated_token_program
	//
	// [18] = [] system_program
	//
	// [19] = [] rent
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitializeInstructionBuilder creates a new `Initialize` instruction builder.
func NewInitializeInstructionBuilder() *Initialize {
	nd := &Initialize{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 20),
	}
	return nd
}

// SetInitAmount0 sets the "init_amount0" parameter.
func (inst *Initialize) SetInitAmount0(init_amount0 uint64) *Initialize {
	inst.InitAmount0 = &init_amount0
	return inst
}

// SetInitAmount1 sets the "init_amount1" parameter.
func (inst *Initialize) SetInitAmount1(init_amount1 uint64) *Initialize {
	inst.InitAmount1 = &init_amount1
	return inst
}

// SetOpenTime sets the "open_time" parameter.
func (inst *Initialize) SetOpenTime(open_time uint64) *Initialize {
	inst.OpenTime = &open_time
	return inst
}

// SetCreatorAccount sets the "creator" account.
func (inst *Initialize) SetCreatorAccount(creator ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(creator).WRITE().SIGNER()
	return inst
}

// GetCreatorAccount gets the "creator" account.
func (inst *Initialize) GetCreatorAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetAmmConfigAccount sets the "amm_config" account.
func (inst *Initialize) SetAmmConfigAccount(ammConfig ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(ammConfig)
	return inst
}

// GetAmmConfigAccount gets the "amm_config" account.
func (inst *Initialize) GetAmmConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetAuthorityAccount sets the "authority" account.
func (inst *Initialize) SetAuthorityAccount(authority ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(authority)
	return inst
}

// GetAuthorityAccount gets the "authority" account.
func (inst *Initialize) GetAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetPoolStateAccount sets the "pool_state" account.
func (inst *Initialize) SetPoolStateAccount(poolState ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(poolState).WRITE()
	return inst
}

// GetPoolStateAccount gets the "pool_state" account.
func (inst *Initialize) GetPoolStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetToken0MintAccount sets the "token0_mint" account.
func (inst *Initialize) SetToken0MintAccount(token0Mint ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(token0Mint)
	return inst
}

// GetToken0MintAccount gets the "token0_mint" account.
func (inst *Initialize) GetToken0MintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetToken1MintAccount sets the "token1_mint" account.
func (inst *Initialize) SetToken1MintAccount(token1Mint ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(token1Mint)
	return inst
}

// GetToken1MintAccount gets the "token1_mint" account.
func (inst *Initialize) GetToken1MintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetLpMintAccount sets the "lp_mint" account.
func (inst *Initialize) SetLpMintAccount(lpMint ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(lpMint).WRITE()
	return inst
}

// GetLpMintAccount gets the "lp_mint" account.
func (inst *Initialize) GetLpMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetCreatorToken0Account sets the "creator_token0" account.
func (inst *Initialize) SetCreatorToken0Account(creatorToken0 ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(creatorToken0).WRITE()
	return inst
}

// GetCreatorToken0Account gets the "creator_token0" account.
func (inst *Initialize) GetCreatorToken0Account() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetCreatorToken1Account sets the "creator_token1" account.
func (inst *Initialize) SetCreatorToken1Account(creatorToken1 ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(creatorToken1).WRITE()
	return inst
}

// GetCreatorToken1Account gets the "creator_token1" account.
func (inst *Initialize) GetCreatorToken1Account() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetCreatorLpTokenAccount sets the "creator_lp_token" account.
func (inst *Initialize) SetCreatorLpTokenAccount(creatorLpToken ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(creatorLpToken).WRITE()
	return inst
}

// GetCreatorLpTokenAccount gets the "creator_lp_token" account.
func (inst *Initialize) GetCreatorLpTokenAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetToken0VaultAccount sets the "token0_vault" account.
func (inst *Initialize) SetToken0VaultAccount(token0Vault ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(token0Vault).WRITE()
	return inst
}

// GetToken0VaultAccount gets the "token0_vault" account.
func (inst *Initialize) GetToken0VaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetToken1VaultAccount sets the "token1_vault" account.
func (inst *Initialize) SetToken1VaultAccount(token1Vault ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(token1Vault).WRITE()
	return inst
}

// GetToken1VaultAccount gets the "token1_vault" account.
func (inst *Initialize) GetToken1VaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

// SetCreatePoolFeeAccount sets the "create_pool_fee" account.
func (inst *Initialize) SetCreatePoolFeeAccount(createPoolFee ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[12] = ag_solanago.Meta(createPoolFee).WRITE()
	return inst
}

// GetCreatePoolFeeAccount gets the "create_pool_fee" account.
func (inst *Initialize) GetCreatePoolFeeAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(12)
}

// SetObservationStateAccount sets the "observation_state" account.
func (inst *Initialize) SetObservationStateAccount(observationState ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[13] = ag_solanago.Meta(observationState).WRITE()
	return inst
}

// GetObservationStateAccount gets the "observation_state" account.
func (inst *Initialize) GetObservationStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(13)
}

// SetTokenProgramAccount sets the "token_program" account.
func (inst *Initialize) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[14] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "token_program" account.
func (inst *Initialize) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(14)
}

// SetToken0ProgramAccount sets the "token0_program" account.
func (inst *Initialize) SetToken0ProgramAccount(token0Program ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[15] = ag_solanago.Meta(token0Program)
	return inst
}

// GetToken0ProgramAccount gets the "token0_program" account.
func (inst *Initialize) GetToken0ProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(15)
}

// SetToken1ProgramAccount sets the "token1_program" account.
func (inst *Initialize) SetToken1ProgramAccount(token1Program ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[16] = ag_solanago.Meta(token1Program)
	return inst
}

// GetToken1ProgramAccount gets the "token1_program" account.
func (inst *Initialize) GetToken1ProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(16)
}

// SetAssociatedTokenProgramAccount sets the "associated_token_program" account.
func (inst *Initialize) SetAssociatedTokenProgramAccount(associatedTokenProgram ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[17] = ag_solanago.Meta(associatedTokenProgram)
	return inst
}

// GetAssociatedTokenProgramAccount gets the "associated_token_program" account.
func (inst *Initialize) GetAssociatedTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(17)
}

// SetSystemProgramAccount sets the "system_program" account.
func (inst *Initialize) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[18] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "system_program" account.
func (inst *Initialize) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(18)
}

// SetRentAccount sets the "rent" account.
func (inst *Initialize) SetRentAccount(rent ag_solanago.PublicKey) *Initialize {
	inst.AccountMetaSlice[19] = ag_solanago.Meta(rent)
	return inst
}

// GetRentAccount gets the "rent" account.
func (inst *Initialize) GetRentAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(19)
}

func (inst *Initialize) SetAccounts(accounts []*ag_solanago.AccountMeta) error {
	inst.AccountMetaSlice = accounts
	return inst.Validate()
}

func (inst *Initialize) SetRemainingAccounts(metas []*ag_solanago.AccountMeta) *Initialize {
	inst.AccountMetaSlice = append(inst.AccountMetaSlice[0:20], metas...)
	return inst
}

func (inst *Initialize) GetRemainingAccounts() []*ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[20:]
}

func (inst Initialize) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_Initialize,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst Initialize) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *Initialize) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.InitAmount0 == nil {
			return errors.New("initAmount0 parameter is not set")
		}
		if inst.InitAmount1 == nil {
			return errors.New("initAmount1 parameter is not set")
		}
		if inst.OpenTime == nil {
			return errors.New("openTime parameter is not set")
		}
	}

	if len(inst.AccountMetaSlice) != 20 {
		return errors.New("accounts slice has wrong length: expected 20 accounts")
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Creator is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.AmmConfig is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.Authority is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.PoolState is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.Token0Mint is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.Token1Mint is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.LpMint is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.CreatorToken0 is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.CreatorToken1 is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.CreatorLpToken is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.Token0Vault is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.Token1Vault is not set")
		}
		if inst.AccountMetaSlice[12] == nil {
			return errors.New("accounts.CreatePoolFee is not set")
		}
		if inst.AccountMetaSlice[13] == nil {
			return errors.New("accounts.ObservationState is not set")
		}
		if inst.AccountMetaSlice[14] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
		if inst.AccountMetaSlice[15] == nil {
			return errors.New("accounts.Token0Program is not set")
		}
		if inst.AccountMetaSlice[16] == nil {
			return errors.New("accounts.Token1Program is not set")
		}
		if inst.AccountMetaSlice[17] == nil {
			return errors.New("accounts.AssociatedTokenProgram is not set")
		}
		if inst.AccountMetaSlice[18] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
		if inst.AccountMetaSlice[19] == nil {
			return errors.New("accounts.Rent is not set")
		}
	}
	return nil
}

func (inst *Initialize) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("Initialize")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=3]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param(" InitAmount0", *inst.InitAmount0))
						paramsBranch.Child(ag_format.Param(" InitAmount1", *inst.InitAmount1))
						paramsBranch.Child(ag_format.Param("    OpenTime", *inst.OpenTime))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=20]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("                 creator", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("              amm_config", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("               authority", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("              pool_state", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("             token0_mint", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("             token1_mint", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("                 lp_mint", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("          creator_token0", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("          creator_token1", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("        creator_lp_token", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("            token0_vault", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta("            token1_vault", inst.AccountMetaSlice.Get(11)))
						accountsBranch.Child(ag_format.Meta("         create_pool_fee", inst.AccountMetaSlice.Get(12)))
						accountsBranch.Child(ag_format.Meta("       observation_state", inst.AccountMetaSlice.Get(13)))
						accountsBranch.Child(ag_format.Meta("           token_program", inst.AccountMetaSlice.Get(14)))
						accountsBranch.Child(ag_format.Meta("          token0_program", inst.AccountMetaSlice.Get(15)))
						accountsBranch.Child(ag_format.Meta("          token1_program", inst.AccountMetaSlice.Get(16)))
						accountsBranch.Child(ag_format.Meta("associated_token_program", inst.AccountMetaSlice.Get(17)))
						accountsBranch.Child(ag_format.Meta("          system_program", inst.AccountMetaSlice.Get(18)))
						accountsBranch.Child(ag_format.Meta("                    rent", inst.AccountMetaSlice.Get(19)))
					})
				})
		})
}

func (obj Initialize) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `InitAmount0` param:
	err = encoder.Encode(obj.InitAmount0)
	if err != nil {
		return err
	}
	// Serialize `InitAmount1` param:
	err = encoder.Encode(obj.InitAmount1)
	if err != nil {
		return err
	}
	// Serialize `OpenTime` param:
	err = encoder.Encode(obj.OpenTime)
	if err != nil {
		return err
	}
	return nil
}
func (obj *Initialize) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `InitAmount0`:
	err = decoder.Decode(&obj.InitAmount0)
	if err != nil {
		return err
	}
	// Deserialize `InitAmount1`:
	err = decoder.Decode(&obj.InitAmount1)
	if err != nil {
		return err
	}
	// Deserialize `OpenTime`:
	err = decoder.Decode(&obj.OpenTime)
	if err != nil {
		return err
	}
	return nil
}

// NewInitializeInstruction declares a new Initialize instruction with the provided parameters and accounts.
func NewInitializeInstruction(
	// Parameters:
	init_amount0 uint64,
	init_amount1 uint64,
	open_time uint64,
	// Accounts:
	creator ag_solanago.PublicKey,
	ammConfig ag_solanago.PublicKey,
	authority ag_solanago.PublicKey,
	poolState ag_solanago.PublicKey,
	token0Mint ag_solanago.PublicKey,
	token1Mint ag_solanago.PublicKey,
	lpMint ag_solanago.PublicKey,
	creatorToken0 ag_solanago.PublicKey,
	creatorToken1 ag_solanago.PublicKey,
	creatorLpToken ag_solanago.PublicKey,
	token0Vault ag_solanago.PublicKey,
	token1Vault ag_solanago.PublicKey,
	createPoolFee ag_solanago.PublicKey,
	observationState ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey,
	token0Program ag_solanago.PublicKey,
	token1Program ag_solanago.PublicKey,
	associatedTokenProgram ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey,
	rent ag_solanago.PublicKey) *Initialize {
	return NewInitializeInstructionBuilder().
		SetInitAmount0(init_amount0).
		SetInitAmount1(init_amount1).
		SetOpenTime(open_time).
		SetCreatorAccount(creator).
		SetAmmConfigAccount(ammConfig).
		SetAuthorityAccount(authority).
		SetPoolStateAccount(poolState).
		SetToken0MintAccount(token0Mint).
		SetToken1MintAccount(token1Mint).
		SetLpMintAccount(lpMint).
		SetCreatorToken0Account(creatorToken0).
		SetCreatorToken1Account(creatorToken1).
		SetCreatorLpTokenAccount(creatorLpToken).
		SetToken0VaultAccount(token0Vault).
		SetToken1VaultAccount(token1Vault).
		SetCreatePoolFeeAccount(createPoolFee).
		SetObservationStateAccount(observationState).
		SetTokenProgramAccount(tokenProgram).
		SetToken0ProgramAccount(token0Program).
		SetToken1ProgramAccount(token1Program).
		SetAssociatedTokenProgramAccount(associatedTokenProgram).
		SetSystemProgramAccount(systemProgram).
		SetRentAccount(rent)
}

// NewSimpleInitializeInstruction declares a new Initialize instruction with the provided parameters and accounts.
func NewSimpleInitializeInstruction(
	// Parameters:
	init_amount0 uint64,
	init_amount1 uint64,
	open_time uint64,
	// Accounts:
	creator ag_solanago.PublicKey,
	ammConfig ag_solanago.PublicKey,
	authority ag_solanago.PublicKey,
	poolState ag_solanago.PublicKey,
	token0Mint ag_solanago.PublicKey,
	token1Mint ag_solanago.PublicKey,
	lpMint ag_solanago.PublicKey,
	creatorToken0 ag_solanago.PublicKey,
	creatorToken1 ag_solanago.PublicKey,
	creatorLpToken ag_solanago.PublicKey,
	token0Vault ag_solanago.PublicKey,
	token1Vault ag_solanago.PublicKey,
	createPoolFee ag_solanago.PublicKey,
	observationState ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey,
	token0Program ag_solanago.PublicKey,
	token1Program ag_solanago.PublicKey,
	associatedTokenProgram ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey,
	rent ag_solanago.PublicKey) *Initialize {
	return NewInitializeInstructionBuilder().
		SetInitAmount0(init_amount0).
		SetInitAmount1(init_amount1).
		SetOpenTime(open_time).
		SetCreatorAccount(creator).
		SetAmmConfigAccount(ammConfig).
		SetAuthorityAccount(authority).
		SetPoolStateAccount(poolState).
		SetToken0MintAccount(token0Mint).
		SetToken1MintAccount(token1Mint).
		SetLpMintAccount(lpMint).
		SetCreatorToken0Account(creatorToken0).
		SetCreatorToken1Account(creatorToken1).
		SetCreatorLpTokenAccount(creatorLpToken).
		SetToken0VaultAccount(token0Vault).
		SetToken1VaultAccount(token1Vault).
		SetCreatePoolFeeAccount(createPoolFee).
		SetObservationStateAccount(observationState).
		SetTokenProgramAccount(tokenProgram).
		SetToken0ProgramAccount(token0Program).
		SetToken1ProgramAccount(token1Program).
		SetAssociatedTokenProgramAccount(associatedTokenProgram).
		SetSystemProgramAccount(systemProgram).
		SetRentAccount(rent)
}
