// Code generated by https://github.com/zheng-lan/anchor-go. DO NOT EDIT.

package whirlpool

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// InitializeConfig is the `initialize_config` instruction.
type InitializeConfig struct {
	FeeAuthority                  *ag_solanago.PublicKey
	CollectProtocolFeesAuthority  *ag_solanago.PublicKey
	RewardEmissionsSuperAuthority *ag_solanago.PublicKey
	DefaultProtocolFeeRate        *uint16

	// [0] = [WRITE, SIGNER] config
	//
	// [1] = [WRITE, SIGNER] funder
	//
	// [2] = [] system_program
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitializeConfigInstructionBuilder creates a new `InitializeConfig` instruction builder.
func NewInitializeConfigInstructionBuilder() *InitializeConfig {
	nd := &InitializeConfig{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 3),
	}
	return nd
}

// SetFeeAuthority sets the "fee_authority" parameter.
func (inst *InitializeConfig) SetFeeAuthority(fee_authority ag_solanago.PublicKey) *InitializeConfig {
	inst.FeeAuthority = &fee_authority
	return inst
}

// SetCollectProtocolFeesAuthority sets the "collect_protocol_fees_authority" parameter.
func (inst *InitializeConfig) SetCollectProtocolFeesAuthority(collect_protocol_fees_authority ag_solanago.PublicKey) *InitializeConfig {
	inst.CollectProtocolFeesAuthority = &collect_protocol_fees_authority
	return inst
}

// SetRewardEmissionsSuperAuthority sets the "reward_emissions_super_authority" parameter.
func (inst *InitializeConfig) SetRewardEmissionsSuperAuthority(reward_emissions_super_authority ag_solanago.PublicKey) *InitializeConfig {
	inst.RewardEmissionsSuperAuthority = &reward_emissions_super_authority
	return inst
}

// SetDefaultProtocolFeeRate sets the "default_protocol_fee_rate" parameter.
func (inst *InitializeConfig) SetDefaultProtocolFeeRate(default_protocol_fee_rate uint16) *InitializeConfig {
	inst.DefaultProtocolFeeRate = &default_protocol_fee_rate
	return inst
}

// SetConfigAccount sets the "config" account.
func (inst *InitializeConfig) SetConfigAccount(config ag_solanago.PublicKey) *InitializeConfig {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(config).WRITE().SIGNER()
	return inst
}

// GetConfigAccount gets the "config" account.
func (inst *InitializeConfig) GetConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetFunderAccount sets the "funder" account.
func (inst *InitializeConfig) SetFunderAccount(funder ag_solanago.PublicKey) *InitializeConfig {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(funder).WRITE().SIGNER()
	return inst
}

// GetFunderAccount gets the "funder" account.
func (inst *InitializeConfig) GetFunderAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetSystemProgramAccount sets the "system_program" account.
func (inst *InitializeConfig) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *InitializeConfig {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "system_program" account.
func (inst *InitializeConfig) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

func (inst *InitializeConfig) SetAccounts(accounts []*ag_solanago.AccountMeta) error {
	inst.AccountMetaSlice = accounts
	return inst.Validate()
}

func (inst *InitializeConfig) SetRemainingAccounts(metas []*ag_solanago.AccountMeta) *InitializeConfig {
	inst.AccountMetaSlice = append(inst.AccountMetaSlice[0:3], metas...)
	return inst
}

func (inst *InitializeConfig) GetRemainingAccounts() []*ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[3:]
}

func (inst InitializeConfig) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_InitializeConfig,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst InitializeConfig) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *InitializeConfig) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.FeeAuthority == nil {
			return errors.New("feeAuthority parameter is not set")
		}
		if inst.CollectProtocolFeesAuthority == nil {
			return errors.New("collectProtocolFeesAuthority parameter is not set")
		}
		if inst.RewardEmissionsSuperAuthority == nil {
			return errors.New("rewardEmissionsSuperAuthority parameter is not set")
		}
		if inst.DefaultProtocolFeeRate == nil {
			return errors.New("defaultProtocolFeeRate parameter is not set")
		}
	}

	if len(inst.AccountMetaSlice) != 3 {
		return errors.New("accounts slice has wrong length: expected 3 accounts")
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Config is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Funder is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *InitializeConfig) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("InitializeConfig")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=4]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("                    FeeAuthority", *inst.FeeAuthority))
						paramsBranch.Child(ag_format.Param("    CollectProtocolFeesAuthority", *inst.CollectProtocolFeesAuthority))
						paramsBranch.Child(ag_format.Param("   RewardEmissionsSuperAuthority", *inst.RewardEmissionsSuperAuthority))
						paramsBranch.Child(ag_format.Param("          DefaultProtocolFeeRate", *inst.DefaultProtocolFeeRate))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=3]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("        config", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("        funder", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("system_program", inst.AccountMetaSlice.Get(2)))
					})
				})
		})
}

func (obj InitializeConfig) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `FeeAuthority` param:
	err = encoder.Encode(obj.FeeAuthority)
	if err != nil {
		return err
	}
	// Serialize `CollectProtocolFeesAuthority` param:
	err = encoder.Encode(obj.CollectProtocolFeesAuthority)
	if err != nil {
		return err
	}
	// Serialize `RewardEmissionsSuperAuthority` param:
	err = encoder.Encode(obj.RewardEmissionsSuperAuthority)
	if err != nil {
		return err
	}
	// Serialize `DefaultProtocolFeeRate` param:
	err = encoder.Encode(obj.DefaultProtocolFeeRate)
	if err != nil {
		return err
	}
	return nil
}
func (obj *InitializeConfig) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `FeeAuthority`:
	err = decoder.Decode(&obj.FeeAuthority)
	if err != nil {
		return err
	}
	// Deserialize `CollectProtocolFeesAuthority`:
	err = decoder.Decode(&obj.CollectProtocolFeesAuthority)
	if err != nil {
		return err
	}
	// Deserialize `RewardEmissionsSuperAuthority`:
	err = decoder.Decode(&obj.RewardEmissionsSuperAuthority)
	if err != nil {
		return err
	}
	// Deserialize `DefaultProtocolFeeRate`:
	err = decoder.Decode(&obj.DefaultProtocolFeeRate)
	if err != nil {
		return err
	}
	return nil
}

// NewInitializeConfigInstruction declares a new InitializeConfig instruction with the provided parameters and accounts.
func NewInitializeConfigInstruction(
	// Parameters:
	fee_authority ag_solanago.PublicKey,
	collect_protocol_fees_authority ag_solanago.PublicKey,
	reward_emissions_super_authority ag_solanago.PublicKey,
	default_protocol_fee_rate uint16,
	// Accounts:
	config ag_solanago.PublicKey,
	funder ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *InitializeConfig {
	return NewInitializeConfigInstructionBuilder().
		SetFeeAuthority(fee_authority).
		SetCollectProtocolFeesAuthority(collect_protocol_fees_authority).
		SetRewardEmissionsSuperAuthority(reward_emissions_super_authority).
		SetDefaultProtocolFeeRate(default_protocol_fee_rate).
		SetConfigAccount(config).
		SetFunderAccount(funder).
		SetSystemProgramAccount(systemProgram)
}

// NewSimpleInitializeConfigInstruction declares a new InitializeConfig instruction with the provided parameters and accounts.
func NewSimpleInitializeConfigInstruction(
	// Parameters:
	fee_authority ag_solanago.PublicKey,
	collect_protocol_fees_authority ag_solanago.PublicKey,
	reward_emissions_super_authority ag_solanago.PublicKey,
	default_protocol_fee_rate uint16,
	// Accounts:
	config ag_solanago.PublicKey,
	funder ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *InitializeConfig {
	return NewInitializeConfigInstructionBuilder().
		SetFeeAuthority(fee_authority).
		SetCollectProtocolFeesAuthority(collect_protocol_fees_authority).
		SetRewardEmissionsSuperAuthority(reward_emissions_super_authority).
		SetDefaultProtocolFeeRate(default_protocol_fee_rate).
		SetConfigAccount(config).
		SetFunderAccount(funder).
		SetSystemProgramAccount(systemProgram)
}
